#include "StyleGAN.h"


StyleGAN StyleGANLoad(const char* filename)
{
	StyleGAN ctx;
	t4::model_dict dict = t4::load(filename);
	dict.load(ctx.mapping_block_1_weight, "mapping_block_1_weight", 512, 512);
	dict.load(ctx.mapping_block_1_bias, "mapping_block_1_bias", 512);
	dict.load(ctx.mapping_block_2_weight, "mapping_block_2_weight", 512, 512);
	dict.load(ctx.mapping_block_2_bias, "mapping_block_2_bias", 512);
	dict.load(ctx.mapping_block_3_weight, "mapping_block_3_weight", 512, 512);
	dict.load(ctx.mapping_block_3_bias, "mapping_block_3_bias", 512);
	dict.load(ctx.mapping_block_4_weight, "mapping_block_4_weight", 512, 512);
	dict.load(ctx.mapping_block_4_bias, "mapping_block_4_bias", 512);
	dict.load(ctx.mapping_block_5_weight, "mapping_block_5_weight", 512, 512);
	dict.load(ctx.mapping_block_5_bias, "mapping_block_5_bias", 512);
	dict.load(ctx.mapping_block_6_weight, "mapping_block_6_weight", 512, 512);
	dict.load(ctx.mapping_block_6_bias, "mapping_block_6_bias", 512);
	dict.load(ctx.mapping_block_7_weight, "mapping_block_7_weight", 512, 512);
	dict.load(ctx.mapping_block_7_bias, "mapping_block_7_bias", 512);
	dict.load(ctx.mapping_block_8_weight, "mapping_block_8_weight", 512, 512);
	dict.load(ctx.mapping_block_8_bias, "mapping_block_8_bias", 512);
	dict.load(ctx.dlatent_avg, "dlatent_avg", 512);
	dict.load(ctx.block_0_const, "block_0_const", 1, 512, 4, 4);
	dict.load(ctx.latents, "latents", 1, 512);
	dict.load(ctx.block_0_noise_weight_1, "block_0_noise_weight_1", 1, 512, 1, 1);
	dict.load(ctx.block_0_noise_weight_2, "block_0_noise_weight_2", 1, 512, 1, 1);
	dict.load(ctx.block_0_conv_2_weight, "block_0_conv_2_weight", 512, 512, 3, 3);
	dict.load(ctx.block_0_bias_1, "block_0_bias_1", 1, 512, 1, 1);
	dict.load(ctx.block_0_bias_2, "block_0_bias_2", 1, 512, 1, 1);
	dict.load(ctx.block_0_style_1_weight, "block_0_style_1_weight", 1024, 512);
	dict.load(ctx.block_0_style_1_bias, "block_0_style_1_bias", 1024);
	dict.load(ctx.block_0_style_2_weight, "block_0_style_2_weight", 1024, 512);
	dict.load(ctx.block_0_style_2_bias, "block_0_style_2_bias", 1024);
	dict.load(ctx.block_0_to_rgb_weight, "block_0_to_rgb_weight", 3, 512, 1, 1);
	dict.load(ctx.block_0_to_rgb_bias, "block_0_to_rgb_bias", 3);
	dict.load(ctx.block_1_noise_weight_1, "block_1_noise_weight_1", 1, 512, 1, 1);
	dict.load(ctx.block_1_noise_weight_2, "block_1_noise_weight_2", 1, 512, 1, 1);
	dict.load(ctx.block_1_conv_1_weight, "block_1_conv_1_weight", 512, 512, 3, 3);
	dict.load(ctx.block_1_conv_2_weight, "block_1_conv_2_weight", 512, 512, 3, 3);
	dict.load(ctx.block_1_bias_1, "block_1_bias_1", 1, 512, 1, 1);
	dict.load(ctx.block_1_bias_2, "block_1_bias_2", 1, 512, 1, 1);
	dict.load(ctx.block_1_style_1_weight, "block_1_style_1_weight", 1024, 512);
	dict.load(ctx.block_1_style_1_bias, "block_1_style_1_bias", 1024);
	dict.load(ctx.block_1_style_2_weight, "block_1_style_2_weight", 1024, 512);
	dict.load(ctx.block_1_style_2_bias, "block_1_style_2_bias", 1024);
	dict.load(ctx.block_1_to_rgb_weight, "block_1_to_rgb_weight", 3, 512, 1, 1);
	dict.load(ctx.block_1_to_rgb_bias, "block_1_to_rgb_bias", 3);
	dict.load(ctx.block_2_noise_weight_1, "block_2_noise_weight_1", 1, 512, 1, 1);
	dict.load(ctx.block_2_noise_weight_2, "block_2_noise_weight_2", 1, 512, 1, 1);
	dict.load(ctx.block_2_conv_1_weight, "block_2_conv_1_weight", 512, 512, 3, 3);
	dict.load(ctx.block_2_conv_2_weight, "block_2_conv_2_weight", 512, 512, 3, 3);
	dict.load(ctx.block_2_bias_1, "block_2_bias_1", 1, 512, 1, 1);
	dict.load(ctx.block_2_bias_2, "block_2_bias_2", 1, 512, 1, 1);
	dict.load(ctx.block_2_style_1_weight, "block_2_style_1_weight", 1024, 512);
	dict.load(ctx.block_2_style_1_bias, "block_2_style_1_bias", 1024);
	dict.load(ctx.block_2_style_2_weight, "block_2_style_2_weight", 1024, 512);
	dict.load(ctx.block_2_style_2_bias, "block_2_style_2_bias", 1024);
	dict.load(ctx.block_2_to_rgb_weight, "block_2_to_rgb_weight", 3, 512, 1, 1);
	dict.load(ctx.block_2_to_rgb_bias, "block_2_to_rgb_bias", 3);
	dict.load(ctx.block_3_noise_weight_1, "block_3_noise_weight_1", 1, 512, 1, 1);
	dict.load(ctx.block_3_noise_weight_2, "block_3_noise_weight_2", 1, 512, 1, 1);
	dict.load(ctx.block_3_conv_1_weight, "block_3_conv_1_weight", 512, 512, 3, 3);
	dict.load(ctx.block_3_conv_2_weight, "block_3_conv_2_weight", 512, 512, 3, 3);
	dict.load(ctx.block_3_bias_1, "block_3_bias_1", 1, 512, 1, 1);
	dict.load(ctx.block_3_bias_2, "block_3_bias_2", 1, 512, 1, 1);
	dict.load(ctx.block_3_style_1_weight, "block_3_style_1_weight", 1024, 512);
	dict.load(ctx.block_3_style_1_bias, "block_3_style_1_bias", 1024);
	dict.load(ctx.block_3_style_2_weight, "block_3_style_2_weight", 1024, 512);
	dict.load(ctx.block_3_style_2_bias, "block_3_style_2_bias", 1024);
	dict.load(ctx.block_3_to_rgb_weight, "block_3_to_rgb_weight", 3, 512, 1, 1);
	dict.load(ctx.block_3_to_rgb_bias, "block_3_to_rgb_bias", 3);
	dict.load(ctx.block_4_noise_weight_1, "block_4_noise_weight_1", 1, 256, 1, 1);
	dict.load(ctx.block_4_noise_weight_2, "block_4_noise_weight_2", 1, 256, 1, 1);
	dict.load(ctx.block_4_conv_1_weight, "block_4_conv_1_weight", 256, 512, 3, 3);
	dict.load(ctx.block_4_conv_2_weight, "block_4_conv_2_weight", 256, 256, 3, 3);
	dict.load(ctx.block_4_bias_1, "block_4_bias_1", 1, 256, 1, 1);
	dict.load(ctx.block_4_bias_2, "block_4_bias_2", 1, 256, 1, 1);
	dict.load(ctx.block_4_style_1_weight, "block_4_style_1_weight", 512, 512);
	dict.load(ctx.block_4_style_1_bias, "block_4_style_1_bias", 512);
	dict.load(ctx.block_4_style_2_weight, "block_4_style_2_weight", 512, 512);
	dict.load(ctx.block_4_style_2_bias, "block_4_style_2_bias", 512);
	dict.load(ctx.block_4_to_rgb_weight, "block_4_to_rgb_weight", 3, 256, 1, 1);
	dict.load(ctx.block_4_to_rgb_bias, "block_4_to_rgb_bias", 3);
	dict.load(ctx.block_5_noise_weight_1, "block_5_noise_weight_1", 1, 128, 1, 1);
	dict.load(ctx.block_5_noise_weight_2, "block_5_noise_weight_2", 1, 128, 1, 1);
	dict.load(ctx.block_5_conv_1_weight, "block_5_conv_1_weight", 256, 128, 4, 4);
	dict.load(ctx.block_5_conv_2_weight, "block_5_conv_2_weight", 128, 128, 3, 3);
	dict.load(ctx.block_5_bias_1, "block_5_bias_1", 1, 128, 1, 1);
	dict.load(ctx.block_5_bias_2, "block_5_bias_2", 1, 128, 1, 1);
	dict.load(ctx.block_5_style_1_weight, "block_5_style_1_weight", 256, 512);
	dict.load(ctx.block_5_style_1_bias, "block_5_style_1_bias", 256);
	dict.load(ctx.block_5_style_2_weight, "block_5_style_2_weight", 256, 512);
	dict.load(ctx.block_5_style_2_bias, "block_5_style_2_bias", 256);
	dict.load(ctx.block_5_to_rgb_weight, "block_5_to_rgb_weight", 3, 128, 1, 1);
	dict.load(ctx.block_5_to_rgb_bias, "block_5_to_rgb_bias", 3);
	dict.load(ctx.block_6_noise_weight_1, "block_6_noise_weight_1", 1, 64, 1, 1);
	dict.load(ctx.block_6_noise_weight_2, "block_6_noise_weight_2", 1, 64, 1, 1);
	dict.load(ctx.block_6_conv_1_weight, "block_6_conv_1_weight", 128, 64, 4, 4);
	dict.load(ctx.block_6_conv_2_weight, "block_6_conv_2_weight", 64, 64, 3, 3);
	dict.load(ctx.block_6_bias_1, "block_6_bias_1", 1, 64, 1, 1);
	dict.load(ctx.block_6_bias_2, "block_6_bias_2", 1, 64, 1, 1);
	dict.load(ctx.block_6_style_1_weight, "block_6_style_1_weight", 128, 512);
	dict.load(ctx.block_6_style_1_bias, "block_6_style_1_bias", 128);
	dict.load(ctx.block_6_style_2_weight, "block_6_style_2_weight", 128, 512);
	dict.load(ctx.block_6_style_2_bias, "block_6_style_2_bias", 128);
	dict.load(ctx.block_6_to_rgb_weight, "block_6_to_rgb_weight", 3, 64, 1, 1);
	dict.load(ctx.block_6_to_rgb_bias, "block_6_to_rgb_bias", 3);
	dict.load(ctx.block_7_noise_weight_1, "block_7_noise_weight_1", 1, 32, 1, 1);
	dict.load(ctx.block_7_noise_weight_2, "block_7_noise_weight_2", 1, 32, 1, 1);
	dict.load(ctx.block_7_conv_1_weight, "block_7_conv_1_weight", 64, 32, 4, 4);
	dict.load(ctx.block_7_conv_2_weight, "block_7_conv_2_weight", 32, 32, 3, 3);
	dict.load(ctx.block_7_bias_1, "block_7_bias_1", 1, 32, 1, 1);
	dict.load(ctx.block_7_bias_2, "block_7_bias_2", 1, 32, 1, 1);
	dict.load(ctx.block_7_style_1_weight, "block_7_style_1_weight", 64, 512);
	dict.load(ctx.block_7_style_1_bias, "block_7_style_1_bias", 64);
	dict.load(ctx.block_7_style_2_weight, "block_7_style_2_weight", 64, 512);
	dict.load(ctx.block_7_style_2_bias, "block_7_style_2_bias", 64);
	dict.load(ctx.block_7_to_rgb_weight, "block_7_to_rgb_weight", 3, 32, 1, 1);
	dict.load(ctx.block_7_to_rgb_bias, "block_7_to_rgb_bias", 3);
	dict.load(ctx.block_8_noise_weight_1, "block_8_noise_weight_1", 1, 16, 1, 1);
	dict.load(ctx.block_8_noise_weight_2, "block_8_noise_weight_2", 1, 16, 1, 1);
	dict.load(ctx.block_8_conv_1_weight, "block_8_conv_1_weight", 32, 16, 4, 4);
	dict.load(ctx.block_8_conv_2_weight, "block_8_conv_2_weight", 16, 16, 3, 3);
	dict.load(ctx.block_8_bias_1, "block_8_bias_1", 1, 16, 1, 1);
	dict.load(ctx.block_8_bias_2, "block_8_bias_2", 1, 16, 1, 1);
	dict.load(ctx.block_8_style_1_weight, "block_8_style_1_weight", 32, 512);
	dict.load(ctx.block_8_style_1_bias, "block_8_style_1_bias", 32);
	dict.load(ctx.block_8_style_2_weight, "block_8_style_2_weight", 32, 512);
	dict.load(ctx.block_8_style_2_bias, "block_8_style_2_bias", 32);
	dict.load(ctx.block_8_to_rgb_weight, "block_8_to_rgb_weight", 3, 16, 1, 1);
	dict.load(ctx.block_8_to_rgb_bias, "block_8_to_rgb_bias", 3);
	return ctx;
}


